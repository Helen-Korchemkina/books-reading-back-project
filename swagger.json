{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Books-readihgAPI",
    "description": "REST API Application"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "https://books-reading-project.herokuapp.com"
    },
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Book",
      "description": "Book endpoints"
    },
    {
      "name": "Statistic",
      "description": "Statistic endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User registration",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User logout",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's information",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/users/training": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get training",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrainingResponse"
                }
              }
            }
          },
          "401": {
            "description": "invalid token or token expired",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Add training date",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Get training object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTrainingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrainingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/book/": {
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Post a book",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token provided current user"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Book object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / book must have at least one page",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get all books",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Token provided current user"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBooksResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      }
    },
    "/api/book/{bookId}/review": {
      "patch": {
        "tags": [
          "Book"
        ],
        "summary": "Update resume",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Resume object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResumeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResumeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Еhe book does not exist",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      }
    },
    "/api/book/{bookId}/status": {
      "patch": {
        "tags": [
          "Book"
        ],
        "summary": "Update status",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Status object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Еhe book does not exist",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      }
    },
    "/api/book/{bookId}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Delete book",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBookResponse"
                }
              }
            }
          },
          "404": {
            "description": "Еhe book does not exist",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      }
    },
    "/api/statistics/": {
      "get": {
        "tags": [
          "Statistic"
        ],
        "summary": "Get statistics",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      }
    },
    "/api/statistics/{userId}": {
      "patch": {
        "tags": [
          "Statistic"
        ],
        "summary": "Update statistics",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Statistics object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatisticsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateStatisticsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Еhe book does not exist",
            "content": {}
          },
          "401": {
            "description": "Unauthorized user",
            "content": {}
          },
          "500": {
            "description": "Database Error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "confirm_password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Petro"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "petro@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "confirm_password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "valid token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "data": {
            "type": "object",
            "description": "Users data",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Backend-generated unique identifier",
                "example": "62e654c37db24cc7c05b6440"
              },
              "name": {
                "type": "string",
                "description": "Users name",
                "example": "Petro"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "petro@gmail.com"
              }
            }
          },
          "statistics": {
            "type": "object",
            "properties": {
              "readDate": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "readTime": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "numberOfPagesRead": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "owner": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "owner id",
                    "example": "62e68c9aa0282191081ba3ec"
                  }
                }
              },
              "_id": {
                "type": "string",
                "description": "Backend-generated unique identifier",
                "example": "62e654c37db24cc7c05b6440"
              },
              "createdAt": {
                "type": "string",
                "description": "data of created"
              },
              "updatedAt": {
                "type": "string",
                "description": "data of update"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "petro@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "valid token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Backend-generated unique identifier",
                "example": "62e654c37db24cc7c05b6440"
              },
              "name": {
                "type": "string",
                "description": "Users name",
                "example": "Petro"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "petro@gmail.com"
              }
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Users name",
                "example": "Petro"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "petro@gmail.com"
              },
              "_id": {
                "type": "string",
                "description": "Backend-generated unique identifier",
                "example": "62e654c37db24cc7c05b6440"
              },
              "createdAt": {
                "type": "string",
                "description": "data of created"
              },
              "training": {
                "type": "object"
              }
            }
          }
        }
      },
      "BookRequest": {
        "type": "object",
        "required": [
          "title",
          "author",
          "releaseDate",
          "countOfPages"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "title of book"
          },
          "author": {
            "type": "string",
            "description": "author of book"
          },
          "releaseDate": {
            "type": "number",
            "description": "release date of book"
          },
          "countOfPages": {
            "type": "number",
            "description": "count Of pages"
          }
        }
      },
      "BookResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "201 status code",
            "example": "201"
          },
          "data": {
            "type": "object",
            "description": "Book Post data",
            "properties": {
              "book": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "title of book"
                  },
                  "author": {
                    "type": "string",
                    "description": "author of book"
                  },
                  "releaseDate": {
                    "type": "number",
                    "description": "release date of book"
                  },
                  "countOfPages": {
                    "type": "number",
                    "description": "count Of pages"
                  },
                  "owner": {
                    "type": "string",
                    "description": "owner id",
                    "example": "62e68c9aa0282191081ba3ec"
                  },
                  "status": {
                    "type": "string",
                    "oneOf": [
                      "Going to read",
                      "Already read",
                      "Reading now"
                    ],
                    "description": "status",
                    "example": "Going to read"
                  },
                  "raiting": {
                    "type": "number",
                    "oneOf": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "description": "raiting",
                    "example": "0"
                  },
                  "resume": {
                    "type": "string",
                    "description": "resume of book"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Backend-generated unique identifier",
                    "example": "62e654c37db24cc7c05b6440"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "data of created"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "data of update"
                  }
                }
              }
            }
          }
        }
      },
      "GetAllBooksResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "200 status code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "All books data",
            "properties": {
              "books": {
                "type": "array",
                "items": {
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "title of book"
                    },
                    "author": {
                      "type": "string",
                      "description": "author of book"
                    },
                    "releaseDate": {
                      "type": "string",
                      "description": "release date of book"
                    },
                    "countOfPages": {
                      "type": "number",
                      "description": "count Of pages"
                    },
                    "status": {
                      "type": "string",
                      "oneOf": [
                        "Going to read",
                        "Already read",
                        "Reading now"
                      ],
                      "description": "status",
                      "example": "Going to read"
                    },
                    "raiting": {
                      "type": "number",
                      "oneOf": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "description": "raiting",
                      "example": "0"
                    },
                    "resume": {
                      "type": "string",
                      "description": "resume of book"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Backend-generated unique identifier",
                      "example": "62e654c37db24cc7c05b6440"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UpdateResumeRequest": {
        "type": "object",
        "required": [
          "rating",
          "resume"
        ],
        "properties": {
          "rating": {
            "type": "number",
            "description": "raiting of book"
          },
          "resume": {
            "type": "string",
            "description": "resume of book"
          }
        }
      },
      "UpdateResumeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "200 status code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "data",
            "properties": {
              "message": {
                "type": "string",
                "example": "Review added"
              }
            }
          }
        }
      },
      "UpdateStatisticsRequest": {
        "type": "object",
        "required": [
          "readDate",
          "readTime",
          "numberOfPagesRead"
        ],
        "properties": {
          "readDate": {
            "type": "string",
            "description": "read date"
          },
          "readTime": {
            "type": "string",
            "description": "read time"
          },
          "numberOfPagesRead": {
            "type": "number",
            "description": "number of page"
          }
        }
      },
      "UpdateStatisticsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "200 status code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "data",
            "properties": {
              "message": {
                "type": "string",
                "example": "Statistics update"
              }
            }
          }
        }
      },
      "UpdateStatusRequest": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "oneOf": [
              "Going to read",
              "Already read",
              "Reading now"
            ],
            "description": "status",
            "example": "Going to read"
          }
        }
      },
      "UpdateStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "200 status code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "data",
            "properties": {
              "message": {
                "type": "string",
                "example": "Status update"
              }
            }
          }
        }
      },
      "DeleteBookResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "book deleted",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "200 status code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "data",
            "properties": {
              "message": {
                "type": "string",
                "example": "Book deleted"
              }
            }
          }
        }
      },
      "StatisticsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Get statistics",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "200 status code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "Statistics data",
            "properties": {
              "statistics": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Backend-generated unique identifier",
                    "example": "62e654c37db24cc7c05b6440"
                  },
                  "readDate": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "readTime": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "numberOfPagesRead": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetTrainingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Get statistics",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "description": "201 status code",
            "example": "201"
          },
          "data": {
            "type": "object",
            "description": "Training data",
            "properties": {
              "training": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string"
                  },
                  "startMillisecond": {
                    "type": "string"
                  },
                  "finish": {
                    "type": "string"
                  },
                  "finishMillisecond": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "AddTrainingRequest": {
        "type": "object",
        "required": [
          "date_start",
          "date_finish"
        ],
        "properties": {
          "date_start": {
            "type": "string"
          },
          "date_finish": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}